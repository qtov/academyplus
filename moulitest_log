echo "tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_toupper.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_strcat.spec.c"
tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_toupper.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_strcat.spec.c
make re -k -C /nfs/zfs-student-6/users/pforgaci/academyplus 
rm -f *.o
rm -f libft.a
gcc -c -Wall -Wextra -Werror *.c; ar rc libft.a *.o
ranlib libft.a
make -k -C ../testframework/v3/
rm -f *.o
gcc -Wall -Werror -Wextra -ggdb -I includes -c srcs/**/*.c
ar rc libmt_framework.a *.o
gcc -g -I . -I ../testframework/v3//includes -I /nfs/zfs-student-6/users/pforgaci/academyplus -I /nfs/zfs-student-6/users/pforgaci/academyplus/includes -I /nfs/zfs-student-6/users/pforgaci/academyplus/includes/builtin -I /nfs/zfs-student-6/users/pforgaci/academyplus/libs/libtowel/includes -D__MOULITEST__ -DPROTOTYPES="MT_ADD_PROTO(00_part1_ft_strnstr); MT_ADD_PROTO(00_part1_ft_strncat); MT_ADD_PROTO(00_part1_ft_toupper); MT_ADD_PROTO(00_part1_ft_isdigit); MT_ADD_PROTO(00_part1_ft_strdup); MT_ADD_PROTO(00_part1_ft_strstr); MT_ADD_PROTO(00_part1_ft_isalnum); MT_ADD_PROTO(00_part1_ft_bzero); MT_ADD_PROTO(00_part1_ft_memcmp); MT_ADD_PROTO(00_part1_ft_strrchr); MT_ADD_PROTO(00_part1_ft_atoi); MT_ADD_PROTO(00_part1_ft_strncpy); MT_ADD_PROTO(00_part1_ft_strcpy); MT_ADD_PROTO(00_part1_ft_memccpy); MT_ADD_PROTO(00_part1_ft_isalpha); MT_ADD_PROTO(00_part1_ft_strncmp); MT_ADD_PROTO(00_part1_ft_memset); MT_ADD_PROTO(00_part1_ft_strlcat); MT_ADD_PROTO(00_part1_ft_strcmp); MT_ADD_PROTO(00_part1_ft_memchr); MT_ADD_PROTO(00_part1_ft_strlen); MT_ADD_PROTO(00_part1_ft_strchr); MT_ADD_PROTO(00_part1_ft_tolower); MT_ADD_PROTO(00_part1_ft_isprint); MT_ADD_PROTO(00_part1_ft_isascii); MT_ADD_PROTO(00_part1_ft_memmove); MT_ADD_PROTO(00_part1_ft_memcpy); MT_ADD_PROTO(00_part1_ft_strcat); " -DADD_TESTS="MT_ADD_SUITE(mt, 00_part1_ft_strnstr, suite_00_part1_ft_strnstr); MT_ADD_SUITE(mt, 00_part1_ft_strncat, suite_00_part1_ft_strncat); MT_ADD_SUITE(mt, 00_part1_ft_toupper, suite_00_part1_ft_toupper); MT_ADD_SUITE(mt, 00_part1_ft_isdigit, suite_00_part1_ft_isdigit); MT_ADD_SUITE(mt, 00_part1_ft_strdup, suite_00_part1_ft_strdup); MT_ADD_SUITE(mt, 00_part1_ft_strstr, suite_00_part1_ft_strstr); MT_ADD_SUITE(mt, 00_part1_ft_isalnum, suite_00_part1_ft_isalnum); MT_ADD_SUITE(mt, 00_part1_ft_bzero, suite_00_part1_ft_bzero); MT_ADD_SUITE(mt, 00_part1_ft_memcmp, suite_00_part1_ft_memcmp); MT_ADD_SUITE(mt, 00_part1_ft_strrchr, suite_00_part1_ft_strrchr); MT_ADD_SUITE(mt, 00_part1_ft_atoi, suite_00_part1_ft_atoi); MT_ADD_SUITE(mt, 00_part1_ft_strncpy, suite_00_part1_ft_strncpy); MT_ADD_SUITE(mt, 00_part1_ft_strcpy, suite_00_part1_ft_strcpy); MT_ADD_SUITE(mt, 00_part1_ft_memccpy, suite_00_part1_ft_memccpy); MT_ADD_SUITE(mt, 00_part1_ft_isalpha, suite_00_part1_ft_isalpha); MT_ADD_SUITE(mt, 00_part1_ft_strncmp, suite_00_part1_ft_strncmp); MT_ADD_SUITE(mt, 00_part1_ft_memset, suite_00_part1_ft_memset); MT_ADD_SUITE(mt, 00_part1_ft_strlcat, suite_00_part1_ft_strlcat); MT_ADD_SUITE(mt, 00_part1_ft_strcmp, suite_00_part1_ft_strcmp); MT_ADD_SUITE(mt, 00_part1_ft_memchr, suite_00_part1_ft_memchr); MT_ADD_SUITE(mt, 00_part1_ft_strlen, suite_00_part1_ft_strlen); MT_ADD_SUITE(mt, 00_part1_ft_strchr, suite_00_part1_ft_strchr); MT_ADD_SUITE(mt, 00_part1_ft_tolower, suite_00_part1_ft_tolower); MT_ADD_SUITE(mt, 00_part1_ft_isprint, suite_00_part1_ft_isprint); MT_ADD_SUITE(mt, 00_part1_ft_isascii, suite_00_part1_ft_isascii); MT_ADD_SUITE(mt, 00_part1_ft_memmove, suite_00_part1_ft_memmove); MT_ADD_SUITE(mt, 00_part1_ft_memcpy, suite_00_part1_ft_memcpy); MT_ADD_SUITE(mt, 00_part1_ft_strcat, suite_00_part1_ft_strcat); " -DRENDU_PATH="\"/nfs/zfs-student-6/users/pforgaci/academyplus\"" tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_toupper.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_strcat.spec.c main.c utils.c   -o libft_tests -L../testframework/v3/ -lmt_framework -lft -L /nfs/zfs-student-6/users/pforgaci/academyplus -I /nfs/zfs-student-6/users/pforgaci/academyplus -I /nfs/zfs-student-6/users/pforgaci/academyplus/includes
/Volumes/Data/nfs/zfs-student-6/users/pforgaci/academyplus/moulitest/libft_tests/libft_tests

--

[36;1m>>>> Tests for libft[0m
Source: github.com/yyang42/moulitest
Legend: ([32;1m.[0m) Ok / ([31;1mF[0m) Fail / ([31;1mS[0m) Segfault / ([31;1mB[0m) Bus error / ([31;1mT[0m) Timeout / ([31;1mA[0m) Abort

Notes: Errors should never pass silently! (That's why we don't handle NULL cases.)

[ [36;1m-------STARTING ALL UNIT TESTS-------[0m ]
[33m>>>> [0m00_part1_ft_strnstr.spec.c -- [31;1m[FAIL][0m [31;1mS[0m[31;1mS[0m[32;1m.[0m[32;1m.[0m[31;1m [SEGV] unittest1 -> strcmp(ft_strnstr(buf, "", 6), buf) == 0[0m
[33m>>>> [0m00_part1_ft_strncat.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_toupper.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_isdigit.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strdup.spec.c --- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strstr.spec.c --- [31;1m[FAIL][0m [31;1mF[0m[31;1mF[0m[32;1m.[0m[31;1mF[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[31;1mF[0m[31;1mF[0m[31;1mF[0m[31;1m [FAIL] test_num1 -> ft_strstr(buf, "une") == strstr(buf, "une")[0m
[33m>>>> [0m00_part1_ft_isalnum.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_bzero.spec.c ---- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_memcmp.spec.c --- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strrchr.spec.c -- [31;1m[FAIL][0m [32;1m.[0m[31;1mF[0m[32;1m.[0m[31;1mF[0m[31;1m [FAIL] unittest2 -> strrchr(buf, 0) == ft_strrchr(buf, 0)[0m
[33m>>>> [0m00_part1_ft_atoi.spec.c ----- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strncpy.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strcpy.spec.c --- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_memccpy.spec.c -- [31;1m[FAIL][0m [32;1m.[0m[31;1mF[0m[31;1m [FAIL] another_test -> ft_memccpy(dest, strdup("test\200string"), '\200', 12) == __builtin___memccpy_ch...[0m
[33m>>>> [0m00_part1_ft_isalpha.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strncmp.spec.c -- [31;1m[FAIL][0m [31;1mF[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[31;1m [FAIL] unittest1 -> ft_strncmp("\200", "\0", 1) > 0[0m
[33m>>>> [0m00_part1_ft_memset.spec.c --- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strlcat.spec.c -- [31;1m[FAIL][0m [31;1mF[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[31;1m [FAIL] unittest1 -> strcmp(buf, "abcabcdef") == 0[0m
[33m>>>> [0m00_part1_ft_strcmp.spec.c --- [31;1m[FAIL][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[31;1mF[0m[32;1m.[0m[31;1m [FAIL] unittest4 -> ft_strcmp("\200", "\0") > 0[0m
[33m>>>> [0m00_part1_ft_memchr.spec.c --- [32;1m[Ok !][0m [32;1m.[0m
[33m>>>> [0m00_part1_ft_strlen.spec.c --- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_strchr.spec.c --- [31;1m[FAIL][0m [32;1m.[0m[31;1mF[0m[32;1m.[0m[32;1m.[0m[31;1m [FAIL] unittest2 -> strchr(buf, 0) == ft_strchr(buf, 0)[0m
[33m>>>> [0m00_part1_ft_tolower.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_isprint.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_isascii.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_memmove.spec.c -- [32;1m[Ok !][0m [32;1m.[0m[32;1m.[0m
[33m>>>> [0m00_part1_ft_memcpy.spec.c --- [32;1m[Ok !][0m [32;1m.[0m
[33m>>>> [0m00_part1_ft_strcat.spec.c --- [32;1m[Ok !][0m [32;1m.[0m
[ [36;1m----------END OF UNIT TESTS----------[0m ]

[31;1m>>>> Result: 20/28 test suites passed. 222/237 tests passed (dots).[0m

